import { numIslands as numIslandsDFS } from './200-number-of-islands';
import { numIslands as numIslandsBFS } from './200-number-of-islands-2';

describe('numIsland', () => {
  test(`Input: grid = [
    ["1","1","1","1","0"],
    ["1","1","0","1","0"],
    ["1","1","0","0","0"],
    ["0","0","0","0","0"]
  ]; Output: 1`, () => {
    expect(
      numIslandsDFS([
        ['1', '1', '1', '1', '0'],
        ['1', '1', '0', '1', '0'],
        ['1', '1', '0', '0', '0'],
        ['0', '0', '0', '0', '0'],
      ])
    ).toBe(1);

    expect(
      numIslandsBFS([
        ['1', '1', '1', '1', '0'],
        ['1', '1', '0', '1', '0'],
        ['1', '1', '0', '0', '0'],
        ['0', '0', '0', '0', '0'],
      ])
    ).toBe(1);
  });

  test(`Input: grid = [
    ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
  ]; Output: 3`, () => {
    expect(
      numIslandsDFS([
        ['1', '1', '0', '0', '0'],
        ['1', '1', '0', '0', '0'],
        ['0', '0', '1', '0', '0'],
        ['0', '0', '0', '1', '1'],
      ])
    ).toBe(3);

    expect(
      numIslandsBFS([
        ['1', '1', '0', '0', '0'],
        ['1', '1', '0', '0', '0'],
        ['0', '0', '1', '0', '0'],
        ['0', '0', '0', '1', '1'],
      ])
    ).toBe(3);
  });
});
